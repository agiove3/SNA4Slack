/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */

// Docker dependencies and properties
buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath "com.bmuschko:gradle-docker-plugin:3.2.3"
  }
}
plugins {
  id "org.sonarqube" version "2.6.2"
}

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'findbugs'
apply plugin: "com.bmuschko.docker-java-application"

// You can add additional instructions to the dockerfile using dockerDistTar and Dockerfile task dsl:
//dockerDistTar {
    //instruction {'RUN ls -la'}
    //environmentVariable('JAVA_OPTS', '-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap')
//}

docker {
    javaApplication {
        baseImage = 'openjdk:8'
        //maintainer = '<name> "<email>"'
        // ports = [9090, 5701]
        tag = 'sna4slack:1.0'
    }
}

// Java Application Dependencies & properties
sourceCompatibility = 1.8
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
	// For internal usage
    compile 'com.google.guava:guava:21.0'
    
    // Compile all jars in the lib directory of the project
    //compile fileTree(dir:'lib', include: ['*.jar'])

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
  
}

findbugs {
  ignoreFailures = true
  toolVersion = "3.0.1"
  effort = "max"
  //findbugsTest.enabled=false
}

pmd {
  ignoreFailures = true
  //pmdTest.enabled=false
  toolVersion = '5.8.1'
  consoleOutput = true
  ruleSets = [
      //      'java-android',
            'java-basic',
            'java-braces',
            'java-clone',
            'java-codesize',
            'java-comments',
            'java-controversial',
            'java-coupling',
            'java-design',
            'java-empty',
            'java-finalizers',
            'java-imports',
          //  'java-j2ee',
          //  'java-javabeans',
            'java-junit',
          //  'java-logging-jakarta-commons',
         //   'java-logging-java',
          //  'java-migrating',
            'java-naming',
            'java-optimizations',
            'java-strictexception',
            'java-strings',
            'java-sunsecure',
            'java-typeresolution',
            'java-unnecessary',
            'java-unusedcode'
            ]
}

checkstyle {
	// Whether to allow the build to continue if there are warnings. Default: ignoreFailures = false
	ignoreFailures = true
	
	// Checkstyle version
	toolVersion "8.8"
}

// Main class
mainClassName = 'main/Main'

